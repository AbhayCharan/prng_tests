name: "Reusable TestU01"

on:
  workflow_call:
    inputs:
      battery_name:
        description: 'Predefined batteries of statistical tests'
        required: true
        type: string
      generator_name:
        description: 'Pseudo Random Number Generator'
        required: true
        type: string
      test_num:
        description: 'Test number'
        required: true
        type: string
      test_dir:
        description: 'Directory name'
        required: true
        type: string

env:
  LOG_FILE: "stat.log"

jobs:
  main:
    name: Test the PRNG
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./TestU01

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build PractRand Statistical Test Suite
      run: |
        echo '```' >> $GITHUB_STEP_SUMMARY
        uname -a >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

    - name: Run TestU01 with ${{inputs.generator_name}} and ${{inputs.battery_name}}"
      run: |
        sudo apt install testu01-bin testu01-data libtestu01-0-dev
        #sed -i '/PROGRAMS = ${{inputs.generator_name}}/s/^/#/g' Makefile    # to comment out
        sed -i '/PROGRAMS = ${{inputs.generator_name}}/s/^#//g' Makefile     # to uncomment
        echo "================================================================="
        cat Makefile
        echo "================================================================="
        #make  >> $GITHUB_STEP_SUMMARY || true
        /usr/bin/time -o ${{env.LOG_FILE}} -p make || true
        echo "action_state=yellow" >> "$GITHUB_ENV"
        printf '%s\n' "$action_state" # This will output 'yellow'
        pwd
        echo "================================================================="
        ls -la .
        echo "================================================================="
        ls -la ../
        echo "================================================================="

    - name: Upload results to Job artifact
      uses: actions/upload-artifact@v4
      with:
        name: 'Full log file ${{inputs.generator_name}}.res'
        path: './TestU01/${{inputs.generator_name}}.res'

    - name: Show error status
      run: |
        cat ./${{inputs.generator_name}}.res | grep "All tests were passed"
        if [ $? -eq 0 ]; then echo "__Status__: Pass ✅" >> $GITHUB_STEP_SUMMARY; else echo "__Status__: Fail ❌ ( ${ERRORS} )" >> $GITHUB_STEP_SUMMARY; fi

      #- name: Show Configuration
      #run: |
      #  echo "__Significance Level α__ :" >> $GITHUB_STEP_SUMMARY
      #  cat include/defs.h |grep ALPHA >> $GITHUB_STEP_SUMMARY # define ALPHA	0.01	SIGNIFICANCE LEVEL
      #  echo "__Initial value of LFSR register__ :" >> $GITHUB_STEP_SUMMARY
      #  cat src/generators.c |grep "^ULONG LFSR_GAMMA" >> $GITHUB_STEP_SUMMARY # ULONG LFSR_GAMMA = 0xec822a619d6ed5d9; // initialize LFSR register
      #  echo "__Bitstreams__ (number of Sequences) : ${{inputs.generator_name}}" >> $GITHUB_STEP_SUMMARY
      #  echo "__Stream length__ (length of one Sequence) : ${{inputs.battery_name}}" >> $GITHUB_STEP_SUMMARY

    - name: Show Stats and Analysis Report
      run: |
        echo "**Run time**, seconds :" >> $GITHUB_STEP_SUMMARY
        cat ${{env.LOG_FILE}} >> $GITHUB_STEP_SUMMARY
        echo "**${{inputs.generator_name}}.res** :" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat ${{inputs.generator_name}}.res >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
